---
name: "tagged-release"

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    name: Test
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-
      - name: Test
        run: go test ./...

  tagged-release:
    name: "Tagged Release"
    needs: test
    runs-on: "ubuntu-latest"
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-build-
      - name: Build
        run: scripts/build_binaries.sh
      - id: get_version
        uses: battila7/get-version-action@v2
      - name: Put version number in install script
        uses: bluwy/substitute-string-action@v1
        id: sub
        with:
          _input-file: "./.github/workflows/template/install.sh"
          _output-file: "./build/install.sh"
          _format-key: "%%key%%"
          version: "${{ steps.get_version.outputs.version }}"
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            build/*.tar.gz
            build/install.sh
